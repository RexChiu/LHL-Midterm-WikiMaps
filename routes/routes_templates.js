//                        MVP Features:
//----------------------------------------------------------------

//User can see maps available to them with static images
router.get('/maps', (req, res) => {});
//User can create a map with a map type - and a static map image
router.post('/maps', (req, res) => {});
//User can see a page to create a new map
router.get('/maps/new', (req, res) => {});
//User can see the details of a map using a unique link
router.get('/maps/:id', (req, res) => {});
// User can modify a map details
router.get('/maps/:id', (req, res) => {});
//User can see many points on a map
router.get('/maps/:id/points', (req, res) => {});
//User can modify a mapâ€™s points - and update static map image url
router.put('/maps/:id/points', (req, res) => {});
//User can add a map points
router.post('/maps/:id/points', (req, res) => {});
router.post('/maps/:id/points/name', (req, res) => {});
router.post('/maps/:id/points/address', (req, res) => {});
//User can see the title, description, and image of a point
router.get('/maps/:id/points/:id', (req, res) => {});
//User can favourite multiple maps
router.post('/users/fav', (req, res) => {});
//User can authenticate
router.post('/users/login', (req, res) => {});
//User can log-out
router.post('/users/logout', (req, res) => {});
//User can register new account
router.post('/users/register', (req, res) => {});
//User can see their profile that shows favourite maps, maps contributed to
router.get('/users/:id', (req, res) => {});
//Extra Features:
//9-Search for public maps by name
//  get /maps?=name
//5-User can add a contributor to be able to edit your map
router.post('/maps/contributors', (req, res) => {});
//5-User can set their map to be private
router.put('/maps/:id/private', (req, res) => {});
//3-User can see a suggestion for usernames as they search for contributor (query for every input change for LIKE %input%)
//  get /users?=%str%
//3-User can search for a restaurant/point to add to the map (places API)
//  ? API Call ? put /maps/:id/points
//3-User can share their map to others (add email for automated emailing) API emailing
router.post('/maps/:id/share', (req, res) => {});
//1-User can click on a point/list and be redirected to google maps for routing (routes API)
//  get /gmaps?=...
//1-User can rate a map
router.put('/maps/:id/rate', (req, res) => {});
//User location stripped from Navigator for generating current location (local search results)
//  get /maps/new, get /maps
//User location grabbed from IP if not generated by Navigator
//	BROWSER http://ip-api.com/
//Show images of point using places API
router.get('/maps/:id/points/:id', (req, res) => {});
//Modify profile
router.put('/users/:id', (req, res) => {});
//Every map has share/rate/favourite button N/A
//Modify the point description
router.put('/maps/:id/points/:id', (req, res) => {});
//delete point
router.delete('/maps/:id/points/:id', (req, res) => {});
